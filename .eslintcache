[{"/Users/rameth/Documents/thunder-mall-store/src/App.js":"1","/Users/rameth/Documents/thunder-mall-store/src/view/NotFound/index.js":"2","/Users/rameth/Documents/thunder-mall-store/src/view/Products.js":"3","/Users/rameth/Documents/thunder-mall-store/src/view/Home/BannerSlider.js":"4","/Users/rameth/Documents/thunder-mall-store/src/view/Settings/Notifications.js":"5","/Users/rameth/Documents/thunder-mall-store/src/components/Dashboard.js":"6","/Users/rameth/Documents/thunder-mall-store/src/view/Home.js":"7","/Users/rameth/Documents/thunder-mall-store/src/view/Payment/PaymentMethod.js":"8","/Users/rameth/Documents/thunder-mall-store/src/view/Settings/index.js":"9","/Users/rameth/Documents/thunder-mall-store/src/view/NotFound/notFound.js":"10","/Users/rameth/Documents/thunder-mall-store/src/components/NavItem.js":"11","/Users/rameth/Documents/thunder-mall-store/src/view/Settings/Password.js":"12","/Users/rameth/Documents/thunder-mall-store/src/view/Payment/CardList.js":"13","/Users/rameth/Documents/thunder-mall-store/src/view/Categery.js":"14","/Users/rameth/Documents/thunder-mall-store/src/view/Orders.js":"15","/Users/rameth/Documents/thunder-mall-store/src/view/login.js":"16","/Users/rameth/Documents/thunder-mall-store/src/view/signup.js":"17","/Users/rameth/Documents/thunder-mall-store/src/reportWebVitals.js":"18","/Users/rameth/Documents/thunder-mall-store/src/fire.js":"19","/Users/rameth/Documents/thunder-mall-store/src/index.js":"20","/Users/rameth/Documents/thunder-mall-store/src/PrivateRoute.js":"21","/Users/rameth/Documents/thunder-mall-store/src/Auth.js":"22","/Users/rameth/Documents/thunder-mall-store/src/view/utility/confirmEmail.js":"23","/Users/rameth/Documents/thunder-mall-store/src/view/utility/forgotPassword.js":"24"},{"size":980,"mtime":1616486632465,"results":"25","hashOfConfig":"26"},{"size":179,"mtime":1610356708285,"results":"27","hashOfConfig":"26"},{"size":3176,"mtime":1610270994253,"results":"28","hashOfConfig":"26"},{"size":1538,"mtime":1610217116606,"results":"29","hashOfConfig":"26"},{"size":3106,"mtime":1610346961957,"results":"30","hashOfConfig":"26"},{"size":7325,"mtime":1616486637041,"results":"31","hashOfConfig":"26"},{"size":1676,"mtime":1610216850044,"results":"32","hashOfConfig":"26"},{"size":679,"mtime":1610277523618,"results":"33","hashOfConfig":"26"},{"size":631,"mtime":1610347412839,"results":"34","hashOfConfig":"26"},{"size":1202,"mtime":1610356708286,"results":"35","hashOfConfig":"26"},{"size":1658,"mtime":1610356708283,"results":"36","hashOfConfig":"26"},{"size":2411,"mtime":1615739274949,"results":"37","hashOfConfig":"26"},{"size":2322,"mtime":1610357373961,"results":"38","hashOfConfig":"26"},{"size":9192,"mtime":1616523551757,"results":"39","hashOfConfig":"26"},{"size":152,"mtime":1610269302425,"results":"40","hashOfConfig":"26"},{"size":2705,"mtime":1616434885599,"results":"41","hashOfConfig":"26"},{"size":2796,"mtime":1615739893869,"results":"42","hashOfConfig":"26"},{"size":362,"mtime":1608035330522,"results":"43","hashOfConfig":"26"},{"size":532,"mtime":1616515018649,"results":"44","hashOfConfig":"26"},{"size":1032,"mtime":1616493119776,"results":"45","hashOfConfig":"26"},{"size":501,"mtime":1615739815104,"results":"46","hashOfConfig":"26"},{"size":684,"mtime":1616484573755,"results":"47","hashOfConfig":"26"},{"size":608,"mtime":1615739739805,"results":"48","hashOfConfig":"26"},{"size":1605,"mtime":1615739717934,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2mdrgz",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},"/Users/rameth/Documents/thunder-mall-store/src/App.js",[],"/Users/rameth/Documents/thunder-mall-store/src/view/NotFound/index.js",[],["118","119"],"/Users/rameth/Documents/thunder-mall-store/src/view/Products.js",["120","121","122","123","124"],"import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nexport default function Products() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <main>\n        {/* Hero unit */}\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* End hero unit */}\n          <Grid container spacing={4}>\n            {cards.map((card) => (\n              <Grid item key={card} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image=\"https://source.unsplash.com/random\"\n                    title=\"Image title\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      Heading\n                    </Typography>\n                    <Typography>\n                      This is a media card. You can use this section to describe the content.\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button size=\"small\" color=\"primary\">\n                      View\n                    </Button>\n                    <Button size=\"small\" color=\"primary\">\n                      Edit\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </main>\n    </React.Fragment>\n  );\n}",["125","126"],"/Users/rameth/Documents/thunder-mall-store/src/view/Home/BannerSlider.js",["127","128","129","130","131","132","133"],"import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport SwipeableViews from 'react-swipeable-views';\nimport { autoPlay } from 'react-swipeable-views-utils';\nimport { blueGrey } from '@material-ui/core/colors'\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n\nconst BannerSlider = (props) => {\n  const [activeStep, setActiveStep] = React.useState(0);\n  const theme = useTheme();\n\n  const handleStepChange = (step) => {\n    setActiveStep(step);\n  };\n\n  return (\n    <div>\n      <AutoPlaySwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={activeStep}\n        onChangeIndex={handleStepChange}\n        enableMouseEvents\n      >\n        {props.Images.map((step, index) => (\n          <div key={step.label}\n            style={{\n              width: \"100%\",\n              height:  \"150px\",\n              backgroundColor: blueGrey.[400]\n            }}>\n            {Math.abs(activeStep - index) <= 2 ? (\n              <img style={{width: \"100%\"}} src={step.image} alt=\"\" />\n            ) : null}\n          </div>\n        ))}\n      </AutoPlaySwipeableViews>\n    </div>\n  );\n}\n\nexport default BannerSlider;\n",["134","135"],"/Users/rameth/Documents/thunder-mall-store/src/view/Settings/Notifications.js",[],"/Users/rameth/Documents/thunder-mall-store/src/components/Dashboard.js",["136","137","138","139"],"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Home, CreditCard, Category, Settings, ShoppingCart, PowerSettingsNew, Store } from '@material-ui/icons';\nimport { Link } from 'react-router-dom' \nimport NavItem from './NavItem'\nimport HomeFragement from '../view/Home'\nimport CategoryFragement from '../view/Categery'\nimport PaymentFragment from '../view/Payment/PaymentMethod'\nimport ProductsFragment from '../view/Products'\nimport OrdersFragment from '../view/Orders'\nimport SettingsFragement from '../view/Settings/index'\nimport fire from '../fire'\n\nconst drawerWidth = 180;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    backgroundColor: \"#ff5722\"\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(5) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(5.7) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 0),\n    height: theme.spacing(0),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  }\n}));\n\nconst MiniDrawer = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  // alert(window.location.pathname);\n  const [fragment, setfragment] = useState(window.location.pathname)\n  const lastRoute = window.location.pathname\n  console.log(lastRoute, '======here is last route =====')\n  // if (lastRoute == '/categeries') {\n  //   console.log('categoeries last route bro')\n  //   setfragment('/categories');\n  // }\n  const loadPageContent = () => {\n    switch (fragment) {\n      case \"Home\":\n        return <HomeFragement/>;\n      case \"/categories\":\n        return <CategoryFragement/>;\n        case \"SubCategory\":\n          return <CategoryFragement/>;\n      case \"Payments\":\n        return <PaymentFragment/>;\n      case \"Products\":\n        return <ProductsFragment/>;\n      case \"Orders\":\n        return <OrdersFragment/>;\n      case \"Settings\":\n        return <SettingsFragement/>;\n      default:\n        return <HomeFragement/>;\n    }\n  }\n\n  const LogOut = ()=> {\n    fire.auth().signOut();\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Product Management\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <NavItem \n            href=\"/\"\n            key={1}\n            title=\"Home\"\n            icon={Home}\n            style={{marginLeft: \"6px\"}}\n            onClick={e=>setfragment(\"Home\")}>\n          </NavItem>\n          <NavItem \n            href=\"/categories\"\n            key={2}\n            title=\"Category\"\n            icon={Category}\n            style={{marginLeft: \"6px\"}}\n            onClick={e=>setfragment(\"/categories\")}>\n          </NavItem>\n          <NavItem \n            href=\"/\"\n            key={3}\n            title=\"Products\"\n            icon={Store}\n            style={{marginLeft: \"6px\"}}\n            onClick={e=>setfragment(\"Products\")}>\n          </NavItem>\n          <NavItem \n            href=\"/\"\n            key={4}\n            title=\"Orders\"\n            icon={ShoppingCart}\n            style={{marginLeft: \"6px\"}}\n            onClick={e=>setfragment(\"Orders\")}>\n          </NavItem>\n          <NavItem \n            href=\"/\"\n            key={5}\n            title=\"Payments\"\n            icon={CreditCard}\n            style={{marginLeft: \"6px\"}}\n            onClick={e=>setfragment(\"Payments\")}>\n          </NavItem>\n          <NavItem \n            href=\"/\"\n            key={6}\n            title=\"Settings\"\n            icon={Settings}\n            style={{marginLeft: \"6px\"}}\n            onClick={e=>setfragment(\"Settings\")}>\n          </NavItem>\n        </List>\n        <Divider/>\n        <NavItem \n            href=\"/\"\n            title=\"Logout\"\n            icon={PowerSettingsNew}\n            style={{marginLeft: \"6px\"}}\n            onClick={e=>LogOut()}>\n          </NavItem>\n        <Divider/>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n          <div>\n            {loadPageContent()}\n          </div>\n      </main>\n    </div>\n  );\n}\n\nexport default MiniDrawer","/Users/rameth/Documents/thunder-mall-store/src/view/Home.js",[],["140","141"],"/Users/rameth/Documents/thunder-mall-store/src/view/Payment/PaymentMethod.js",[],"/Users/rameth/Documents/thunder-mall-store/src/view/Settings/index.js",["142"],"import React from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Notifications from './Notifications';\nimport Password from './Password';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst SettingsView = () => {\n  const classes = useStyles();\n\n  return (\n      <Container maxWidth=\"lg\">\n        <Notifications />\n        <Box mt={3}>\n          <Password />\n        </Box>\n      </Container>\n  );\n};\n\nexport default SettingsView;",["143","144"],"/Users/rameth/Documents/thunder-mall-store/src/view/NotFound/notFound.js",[],["145","146"],"/Users/rameth/Documents/thunder-mall-store/src/components/NavItem.js",[],["147","148"],"/Users/rameth/Documents/thunder-mall-store/src/view/Settings/Password.js",["149","150"],"import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport fire from '../../fire'\n\nconst useStyles = makeStyles(({\n  root: {}\n}));\n\nconst Password = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n  \n  const handleUpdatePassword = useCallback(\n    async event => {\n      event.preventDefault();\n      console.log(values.confirm, 'here is confirm password')\n      try {\n        var user = fire.auth().currentUser;\n        var credential = fire.auth.Aut.credential('gskqpuoqfjrneagfsk@wqcefp.com', '121212')\n\n        await user.reauthenticateWithCredential(credential)\n        .then(() => {\n          user.updatePassword(values.confirm)\n            .then(() => {\n              alert('password update success')\n            })\n        })\n    } catch (error) {\n      alert(error);\n    }\n    }\n  );\n\n  return (\n    <form\n      className={clsx(classes.root, className)}\n      {...rest}\n      onSubmit={handleUpdatePassword}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"Update password\"\n          title=\"Password\"\n        />\n        <Divider />\n        <CardContent>\n          <TextField\n            fullWidth\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <TextField\n            fullWidth\n            label=\"Confirm password\"\n            margin=\"normal\"\n            name=\"confirm\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.confirm}\n            variant=\"outlined\"\n          />\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            type=\"submit\"\n          >\n            Update\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\n\nexport default Password;","/Users/rameth/Documents/thunder-mall-store/src/view/Payment/CardList.js",["151"],"import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { Button, Grid, IconButton } from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Create, Delete } from '@material-ui/icons';\nimport Typography from '@material-ui/core/Typography';\n\nvar cardStyle = {\n  marginTop: '20px',\n  paddingTop: '50px'\n}\n\nexport default function SimpleCard() {\n  return (\n    <>\n    <Card style={cardStyle}>\n      <CardContent pt=\"30px\">\n        <Typography variant=\"h6\">\n          XXXX XXXX 87989 5998\n        </Typography>\n        <Typography>\n          Expired 11/2021\n        </Typography>\n\n        <Grid container justify=\"flex-end\"> \n          <IconButton>\n            <Create />\n        </IconButton>\n          <IconButton>\n            <Delete style={{color: \"#e31721\"}}/>\n        </IconButton>\n        </Grid>\n      </CardContent>\n    </Card>\n    <Card style={cardStyle}>\n      <CardContent pt=\"30px\">\n        <Typography variant=\"h6\">\n          XXXX XXXX 99994 9798\n        </Typography>\n        <Typography>\n          Expired 04/2021\n        </Typography>\n\n        <Grid container justify=\"flex-end\"> \n          <IconButton>\n            <Create />\n        </IconButton>\n          <IconButton>\n            <Delete style={{color: \"#e31721\"}}/>\n        </IconButton>\n        </Grid>\n      </CardContent>\n    </Card>\n    <Card style={cardStyle}>\n      <CardContent pt=\"30px\">\n        <Typography variant=\"h6\">\n          XXXX XXXX 87989 93443\n        </Typography>\n        <Typography>\n          Expired 09/2021\n        </Typography>\n\n        <Grid container justify=\"flex-end\"> \n          <IconButton>\n            <Create />\n        </IconButton>\n          <IconButton>\n            <Delete style={{color: \"#e31721\"}}/>\n        </IconButton>\n        </Grid>\n      </CardContent>\n    </Card>\n    <Card style={cardStyle}>\n      <CardContent pt=\"30px\">\n        <Typography variant=\"h6\">\n          XXXX XXXX 93435 9998\n        </Typography>\n        <Typography>\n          Expired 10/2021\n        </Typography>\n\n        <Grid container justify=\"flex-end\"> \n          <IconButton>\n            <Create />\n        </IconButton>\n          <IconButton>\n            <Delete style={{color: \"#e31721\"}}/>\n        </IconButton>\n        </Grid>\n      </CardContent>\n    </Card>\n    </>\n  );\n}\n",["152","153"],"/Users/rameth/Documents/thunder-mall-store/src/view/Categery.js",["154","155","156","157","158","159"],"import React, { useEffect, useState } from 'react';\nimport fire from '../fire';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport TextField from '@material-ui/core/TextField';\nimport { Autocomplete } from '@material-ui/lab';\nimport {\n  Typography,\n  IconButton,\n  Grid,\n  Button,\n  DialogTitle,\n  DialogContentText,\n  DialogContent,\n  DialogActions,\n  Dialog,\n  Avatar\n} from '@material-ui/core';\n\nimport { Create, Delete, ViewList, Add } from '@material-ui/icons';\nimport { store } from 'react-notifications-component';\n\nconst columns = [\n  { id: 'code', label: 'Code' },\n  { id: 'name', label: 'Name' },\n  { id: 'picture', label: 'Picture' },\n  { id: 'action', label: 'Action' }\n];\n\nfunction createData(code, name, picture) {\n  return { code, name, picture };\n}\n\nconst rows = [];\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  }\n});\n\nexport default function Category(category) {\n  const [categories, setCategories] = useState([])\n  const [open, setOpen] = useState(false);\n  const [categoryInfo, setCategoryInfo] = useState();\n  const [toggleCreateDialog, setToggleCreateDialog] = useState(false);\n  const [fileUrl, setFileUrl] = useState(null);\n  const [loading, setLoading] = useState(null);\n\n  useEffect(() => {\n    const fetchCateogries = async () => {\n      const db = fire.firestore();\n      const data = await db.collection('categories').get();\n      const categories = data.docs.map(doc => ({\n        ...doc.data(),\n        id: doc.id\n      }));\n      setCategories(categories);\n    } \n    fetchCateogries();\n  }, [category])\n\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const loadSubCategory = async (cateSelected) => {\n    const db = fire.firestore();\n    const data = await db.collection('categories').doc(cateSelected.id).collection('name').get();\n    const categories = data.docs.map(doc => ({\n      ...doc.data(),\n      id: doc.id\n    }));\n\n  }\n\n  //delete function\n  const handleDeleteDialog = (id) => {\n    setOpen(true);\n    setCategoryInfo(id);\n    console.log(id)\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleDelete = () => {\n    try {\n      const db = fire.firestore();\n      db.collection(\"categories\").doc(categoryInfo.id).delete().then(() => {\n        setOpen(false);\n      }).catch((error) => {\n        alert(error)\n      });\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  //Create function \n  const handleCreateDialog = (id) => {\n    setToggleCreateDialog(true);\n  };\n\n  const closeCreateDialog = () => {\n    setToggleCreateDialog(false);\n  };\n  const handleCreateNewCategory = async (e) => {\n    e.preventDefault();\n    const code = e.target.code.value;\n    const name = e.target.name.value;\n\n    try {\n      const db = fire.firestore();\n      await db.collection(\"categories\").doc(code).set({\n        code: code,\n        name: name,\n        picture: fileUrl\n      })\n      setToggleCreateDialog(false);\n    } catch (err) {\n      alert(err)\n    }\n  }\n\n  const onImageChange = async (e) => {\n    const file = e.target.files[0];\n    const storageRef = fire.storage().ref();\n    const fileRef = storageRef.child(file.name);\n    await fileRef.put(file)\n    setFileUrl(await fileRef.getDownloadURL());\n  }\n\n\n  return (\n    <Paper style={{ padding: '20px' }}>\n      <Typography variant=\"h4\">\n        Product Category\n      </Typography>\n      <Grid container justify=\"center\" alignItems=\"center\">\n        <Grid item xs={6}>\n          <Autocomplete\n            id=\"combo-box\"\n            options={categories}\n            getOptionLabel={(option) => option.name}\n            style={{ width: 350, padding: 16 }}\n            onChange={(event, item) => {\n              loadSubCategory(item)\n            }}\n            renderInput={(params) => <TextField {...params} label=\"Main Categegory\" variant=\"outlined\" size=\"small\" />}\n          />\n        </Grid>\n        <Grid item xs={6} align=\"right\" justify=\"middle\">\n          <Button variant=\"contained\" color=\"primary\" onClick={handleCreateDialog}>\n            <Add /> Create\n          </Button>\n        </Grid>\n      </Grid>\n      <TableContainer className={classes.container} style={{ maxHeight: \"70%\"}}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {categories.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((cate) => {\n              return (\n                <TableRow hover tabIndex={-1} key={cate.id} style={{ height: '10px' }}>\n                  <TableCell>{cate.code}</TableCell>\n                  <TableCell>{cate.name}</TableCell>\n                  <TableCell style={{ width: '400px' }}>\n                    <img alt=\"icons\" src={cate.picture} style={{ width: '30px', height: '30px' }} />\n                  </TableCell>\n                  <TableCell style={{ margin: 0, padding: 0, width: \"200px\" }}>\n                    <IconButton color=\"primary\">\n                      <Create />\n                    </IconButton>\n                    <IconButton color=\"primary\" onClick={e => handleDeleteDialog(cate)}>\n                      <Delete />\n                    </IconButton>\n                    <IconButton color=\"primary\">\n                      <ViewList />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Confirmation\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure you want to delete this category?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n            </Button>\n          <Button onClick={handleDelete} color=\"primary\" variant=\"contained\" autoFocus pending={true}>\n            Confirm\n            </Button>\n        </DialogActions>\n      </Dialog>\n\n      <Dialog\n        open={toggleCreateDialog}\n        onClose={closeCreateDialog}\n        fullWidth\n        maxWidth=\"sm\"\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Create Main Category\"}</DialogTitle>\n        <form onSubmit={handleCreateNewCategory}>\n          <DialogContent>\n            <TextField\n              label=\"code\"\n              id=\"outlined-size-small\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              size=\"small\"\n              name=\"code\"\n              type=\"text\"\n            />\n            <TextField\n              label=\"name\"\n              id=\"outlined-size-small\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              size=\"small\"\n              name=\"name\"\n              type=\"text\"\n            />\n            <input\n              style={{ display: \"none\" }}\n              id=\"contained-button-file\"\n              type=\"file\"\n              onChange={onImageChange}\n            />\n            <label htmlFor=\"contained-button-file\">\n              <Button variant=\"contained\" color=\"primary\" component=\"span\">\n                Upload\n                  </Button>\n            </label>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={closeCreateDialog} color=\"primary\">\n              Cancel\n            </Button>\n            <Button type=\"submit\" color=\"primary\" variant=\"contained\" autoFocus>\n              Create\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </Paper>\n  );\n}\n","/Users/rameth/Documents/thunder-mall-store/src/view/Orders.js",[],["160","161"],"/Users/rameth/Documents/thunder-mall-store/src/view/login.js",["162"],"\nimport React, { useCallback, useContext } from \"react\";\nimport { withRouter, Redirect } from \"react-router\";\nimport { Container, Box, Button, TextField} from '@material-ui/core'\nimport { Link } from 'react-router-dom'\nimport fire from '../fire'\nimport { AuthContext } from \"../Auth\"\n\nconst Login = ({ history }) => {\n  const { currentUser, userData }= useContext(AuthContext);\n  console.log(useContext(AuthContext), 'here');\n  const handleLogin = useCallback(\n    async event => {\n      event.preventDefault();\n      const { email, password } = event.target.elements;\n      try {\n        await fire\n          .auth()\n          .signInWithEmailAndPassword(email.value, password.value);\n          \n          if(!userData.emailVerified) {\n            alert('we have send u the verified email')\n            var user = fire.auth().currentUser\n            user.sendEmailVerification()\n            history.push('/emailverify')\n          } else {\n            history.push(\"/\");\n          }\n      } catch (error) {\n        alert(error);\n      }\n    },\n    [history]\n  );\n  \n  if (currentUser) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box mt=\"40px\">\n        <form onSubmit={handleLogin}>\n            <h3>Sign In</h3>\n            <TextField\n                  label=\"Email\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  fullWidth\n                  margin=\"normal\"\n                  size=\"small\"\n                  name=\"email\"\n                  type=\"email\"\n              />\n            <TextField\n                  label=\"Password\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  fullWidth\n                  margin=\"normal\"\n                  size=\"small\"\n                  name=\"password\"\n              />\n\n\n            <div className=\"form-group\">\n                <div className=\"custom-control custom-checkbox\">\n                    <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                    <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\n                </div>\n            </div>\n              <Button\n                align=\"center\"\n                variant=\"contained\" \n                color=\"secondary\"\n                type=\"submit\"\n                >Sign In\n              </Button>\n            <p className=\"forgot-password text-right\">\n                Forgot <a href=\"forgot-password\">password?</a>\n            </p>\n        </form>\n        <Link to=\"/signup\">\n          <span>Don't have account?</span>\n        </Link>\n      </Box>\n    </Container>\n  );\n}\n\nexport default withRouter(Login);","/Users/rameth/Documents/thunder-mall-store/src/view/signup.js",["163","164"],"import React, { useCallback, useContext } from \"react\";\nimport { \n    Container,\n    Box,\n    Button,\n    TextField }\nfrom '@material-ui/core'\nimport { Link } from 'react-router-dom'\nimport fire from '../fire'\nimport { withRouter } from \"react-router\"\nimport { AuthContext } from \"../Auth\"\n\nconst SignUp = ({history}) => {\n  const { currentUser, userData } = useContext(AuthContext);\n  const handleSignUp = useCallback( async event => {\n      event.preventDefault();\n      const { email, password } = event.target.elements;\n      try {\n        await fire\n        .auth() \n        .createUserWithEmailAndPassword(email.value, password.value);\n        if(!userData.emailVerified) {\n          alert('we have send u the verified email')\n          var user = fire.auth().currentUser\n          user.sendEmailVerification()\n          history.push('/emailverify')\n        } else {\n          history.push(\"/\");\n        }\n      } catch(error) {\n        alert(error)\n      }\n    }, [history]\n  );\n  return (\n    <Container maxWidth=\"sm\">\n      <Box mt={10} >\n        <form p={20} onSubmit={handleSignUp}>\n            <h3>Sign Up</h3>\n              <TextField\n                  label=\"First Name\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  fullWidth\n                  margin=\"normal\"\n                  size=\"small\"\n                  type=\"text\"\n                  name=\"firstname\"\n              />\n              <TextField\n                  label=\"Last Name\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  fullWidth\n                  margin=\"normal\"\n                  size=\"small\"\n                  type=\"text\"\n                  name=\"lastname\"\n              />\n              <TextField\n                  label=\"Email\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  fullWidth\n                  margin=\"normal\"\n                  size=\"small\"\n                  type=\"email\"\n                  name=\"email\"\n              />\n              <TextField\n                  label=\"Password\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  fullWidth\n                  margin=\"normal\"\n                  size=\"small\"\n                  type=\"password\"\n                  name=\"password\"\n              />\n          <Button\n              align=\"center\"\n              variant=\"contained\" \n              color=\"secondary\"\n              type=\"submit\"\n              >Submit\n          </Button>\n            <p className=\"forgot-password text-right\">\n                Already registered? <Link to=\"/login\"> Sign In</Link>\n            </p>\n        </form>\n      </Box>\n    </Container>\n  );\n}\n\nexport default withRouter(SignUp);","/Users/rameth/Documents/thunder-mall-store/src/reportWebVitals.js",[],["165","166"],"/Users/rameth/Documents/thunder-mall-store/src/fire.js",[],"/Users/rameth/Documents/thunder-mall-store/src/index.js",[],"/Users/rameth/Documents/thunder-mall-store/src/PrivateRoute.js",[],"/Users/rameth/Documents/thunder-mall-store/src/Auth.js",["167"],"/Users/rameth/Documents/thunder-mall-store/src/view/utility/confirmEmail.js",[],"/Users/rameth/Documents/thunder-mall-store/src/view/utility/forgotPassword.js",["168","169","170"],"\nimport React, { useCallback, useContext } from \"react\";\nimport { withRouter, Redirect } from \"react-router\";\nimport { Container, Box, Button, TextField} from '@material-ui/core'\nimport fire from '../../fire'\nimport { Link } from 'react-router-dom'\n// import { AuthContext } from \"../Auth\"\n\nconst Login = ({ history }) => {\n  // const { currentUser, userData } = useContext(AuthContext);\n  const handleForgotPassword = useCallback(\n    async event => {\n      event.preventDefault();\n      const { email } = event.target.elements;\n      try {\n        await fire\n          .auth()\n          .sendPasswordResetEmail(email.value);\n      } catch (error) {\n        alert(error);\n      }\n    },\n    [history]\n  );\n  \n  // if (currentUser) {\n  //   return <Redirect to=\"/\" />;\n  // }\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box mt=\"40px\">\n      <Link to=\"/login\">\n          <span>Back To Login</span>\n        </Link>\n        <form onSubmit={handleForgotPassword}>\n            <h3>Reset Password</h3>\n            <TextField\n                  label=\"Email\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  fullWidth\n                  margin=\"normal\"\n                  size=\"small\"\n                  name=\"email\"\n                  type=\"email\"\n              />\n              <Button\n                align=\"center\"\n                variant=\"contained\" \n                color=\"secondary\"\n                type=\"submit\"\n                >Reset Password\n              </Button>\n        </form>\n      </Box>\n    </Container>\n  );\n}\n\nexport default withRouter(Login);",{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":2,"column":8,"nodeType":"177","messageId":"178","endLine":2,"endColumn":14},{"ruleId":"175","severity":1,"message":"179","line":4,"column":8,"nodeType":"177","messageId":"178","endLine":4,"endColumn":18},{"ruleId":"175","severity":1,"message":"180","line":9,"column":8,"nodeType":"177","messageId":"178","endLine":9,"endColumn":19},{"ruleId":"175","severity":1,"message":"181","line":11,"column":8,"nodeType":"177","messageId":"178","endLine":11,"endColumn":15},{"ruleId":"175","severity":1,"message":"182","line":17,"column":10,"nodeType":"177","messageId":"178","endLine":17,"endColumn":19},{"ruleId":"171","replacedBy":"183"},{"ruleId":"173","replacedBy":"184"},{"ruleId":"175","severity":1,"message":"185","line":2,"column":10,"nodeType":"177","messageId":"178","endLine":2,"endColumn":20},{"ruleId":"175","severity":1,"message":"186","line":3,"column":8,"nodeType":"177","messageId":"178","endLine":3,"endColumn":21},{"ruleId":"175","severity":1,"message":"187","line":4,"column":8,"nodeType":"177","messageId":"178","endLine":4,"endColumn":13},{"ruleId":"175","severity":1,"message":"188","line":5,"column":8,"nodeType":"177","messageId":"178","endLine":5,"endColumn":18},{"ruleId":"175","severity":1,"message":"189","line":6,"column":8,"nodeType":"177","messageId":"178","endLine":6,"endColumn":14},{"ruleId":"175","severity":1,"message":"190","line":7,"column":8,"nodeType":"177","messageId":"178","endLine":7,"endColumn":25},{"ruleId":"175","severity":1,"message":"191","line":8,"column":8,"nodeType":"177","messageId":"178","endLine":8,"endColumn":26},{"ruleId":"171","replacedBy":"192"},{"ruleId":"173","replacedBy":"193"},{"ruleId":"175","severity":1,"message":"194","line":15,"column":8,"nodeType":"177","messageId":"178","endLine":15,"endColumn":16},{"ruleId":"175","severity":1,"message":"195","line":16,"column":8,"nodeType":"177","messageId":"178","endLine":16,"endColumn":20},{"ruleId":"175","severity":1,"message":"196","line":17,"column":8,"nodeType":"177","messageId":"178","endLine":17,"endColumn":20},{"ruleId":"175","severity":1,"message":"197","line":19,"column":10,"nodeType":"177","messageId":"178","endLine":19,"endColumn":14},{"ruleId":"171","replacedBy":"198"},{"ruleId":"173","replacedBy":"199"},{"ruleId":"175","severity":1,"message":"200","line":20,"column":9,"nodeType":"177","messageId":"178","endLine":20,"endColumn":16},{"ruleId":"171","replacedBy":"201"},{"ruleId":"173","replacedBy":"202"},{"ruleId":"171","replacedBy":"203"},{"ruleId":"173","replacedBy":"204"},{"ruleId":"171","replacedBy":"205"},{"ruleId":"173","replacedBy":"206"},{"ruleId":"175","severity":1,"message":"207","line":2,"column":8,"nodeType":"177","messageId":"178","endLine":2,"endColumn":17},{"ruleId":"208","severity":1,"message":"209","line":34,"column":32,"nodeType":"177","endLine":34,"endColumn":43},{"ruleId":"175","severity":1,"message":"189","line":3,"column":10,"nodeType":"177","messageId":"178","endLine":3,"endColumn":16},{"ruleId":"171","replacedBy":"210"},{"ruleId":"173","replacedBy":"211"},{"ruleId":"175","severity":1,"message":"212","line":25,"column":3,"nodeType":"177","messageId":"178","endLine":25,"endColumn":9},{"ruleId":"175","severity":1,"message":"213","line":29,"column":10,"nodeType":"177","messageId":"178","endLine":29,"endColumn":15},{"ruleId":"175","severity":1,"message":"214","line":38,"column":10,"nodeType":"177","messageId":"178","endLine":38,"endColumn":20},{"ruleId":"175","severity":1,"message":"215","line":59,"column":10,"nodeType":"177","messageId":"178","endLine":59,"endColumn":17},{"ruleId":"175","severity":1,"message":"216","line":59,"column":19,"nodeType":"177","messageId":"178","endLine":59,"endColumn":29},{"ruleId":"175","severity":1,"message":"217","line":91,"column":11,"nodeType":"177","messageId":"178","endLine":91,"endColumn":21},{"ruleId":"171","replacedBy":"218"},{"ruleId":"173","replacedBy":"219"},{"ruleId":"208","severity":1,"message":"220","line":33,"column":5,"nodeType":"221","endLine":33,"endColumn":14,"suggestions":"222"},{"ruleId":"175","severity":1,"message":"223","line":14,"column":11,"nodeType":"177","messageId":"178","endLine":14,"endColumn":22},{"ruleId":"208","severity":1,"message":"220","line":33,"column":8,"nodeType":"221","endLine":33,"endColumn":17,"suggestions":"224"},{"ruleId":"171","replacedBy":"225"},{"ruleId":"173","replacedBy":"226"},{"ruleId":"175","severity":1,"message":"227","line":9,"column":10,"nodeType":"177","messageId":"178","endLine":9,"endColumn":18},{"ruleId":"175","severity":1,"message":"228","line":2,"column":30,"nodeType":"177","messageId":"178","endLine":2,"endColumn":40},{"ruleId":"175","severity":1,"message":"229","line":3,"column":22,"nodeType":"177","messageId":"178","endLine":3,"endColumn":30},{"ruleId":"208","severity":1,"message":"230","line":23,"column":5,"nodeType":"221","endLine":23,"endColumn":14,"suggestions":"231"},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],"no-unused-vars","'AppBar' is defined but never used.","Identifier","unusedVar","'CameraIcon' is defined but never used.","'CssBaseline' is defined but never used.","'Toolbar' is defined but never used.","'Copyright' is defined but never used.",["232"],["233"],"'makeStyles' is defined but never used.","'MobileStepper' is defined but never used.","'Paper' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'KeyboardArrowLeft' is defined but never used.","'KeyboardArrowRight' is defined but never used.",["232"],["233"],"'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'Link' is defined but never used.",["232"],["233"],"'classes' is assigned a value but never used.",["232"],["233"],["232"],["233"],["232"],["233"],"'PropTypes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?",["232"],["233"],"'Avatar' is defined but never used.","'store' is defined but never used.","'createData' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'categories' is assigned a value but never used.",["232"],["233"],"React Hook useCallback has a missing dependency: 'userData.emailVerified'. Either include it or remove the dependency array.","ArrayExpression",["234"],"'currentUser' is assigned a value but never used.",["235"],["232"],["233"],"'userData' is assigned a value but never used.","'useContext' is defined but never used.","'Redirect' is defined but never used.","React Hook useCallback has an unnecessary dependency: 'history'. Either exclude it or remove the dependency array.",["236"],"no-global-assign","no-unsafe-negation",{"desc":"237","fix":"238"},{"desc":"237","fix":"239"},{"desc":"240","fix":"241"},"Update the dependencies array to be: [history, userData.emailVerified]",{"range":"242","text":"243"},{"range":"244","text":"243"},"Update the dependencies array to be: []",{"range":"245","text":"246"},[1048,1057],"[history, userData.emailVerified]",[971,980],[692,701],"[]"]